#ifndef __CHIP8_H
#define __CHIP8_H

#include <stdint.h>
#include <stdlib.h>
#include <stdio.h>
#include <stdbool.h>

#define WIDTH 64
#define HEIGHT 32

#define INTERPRETER_ADDRESS 0x000 //0x000 to 0x1FF
#define FONTSET_ADDRESS 0x050 //0x050 - 0xA0A
#define INST_ADDRESS 0x200
#define FONTSET_SIZE 80

uint8_t fontset[FONTSET_SIZE] = {
        0xF0, 0x90, 0x90, 0x90, 0xF0, // 0
	0x20, 0x60, 0x20, 0x20, 0x70, // 1
	0xF0, 0x10, 0xF0, 0x80, 0xF0, // 2
	0xF0, 0x10, 0xF0, 0x10, 0xF0, // 3
	0x90, 0x90, 0xF0, 0x10, 0x10, // 4
	0xF0, 0x80, 0xF0, 0x10, 0xF0, // 5
	0xF0, 0x80, 0xF0, 0x90, 0xF0, // 6
	0xF0, 0x10, 0x20, 0x40, 0x40, // 7
	0xF0, 0x90, 0xF0, 0x90, 0xF0, // 8
	0xF0, 0x90, 0xF0, 0x10, 0xF0, // 9
	0xF0, 0x90, 0xF0, 0x90, 0x90, // A
	0xE0, 0x90, 0xE0, 0x90, 0xE0, // B
	0xF0, 0x80, 0x80, 0x80, 0xF0, // C
	0xE0, 0x90, 0x90, 0x90, 0xE0, // D
	0xF0, 0x80, 0xF0, 0x80, 0xF0, // E
	0xF0, 0x80, 0xF0, 0x80, 0x80  // F
};

typedef struct {
        uint8_t registers[16];
        uint8_t memory[4096];
        uint16_t stack[16];
        uint16_t index;
        uint16_t PC;
        uint16_t SP;
        uint8_t delayTimer;
        uint8_t soundTimer;
        uint8_t inputKeys[16];
        uint32_t screen[WIDTH * HEIGHT];
        uint16_t opcode;

} Chip8;

int initializeChip8(Chip8 *);
int loadROM(Chip8 *, char const *);
void update(Chip8 *);

#endif